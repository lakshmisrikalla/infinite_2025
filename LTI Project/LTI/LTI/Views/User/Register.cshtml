@model LTI.Models.User
@{
    Layout = "~/Views/User/UserLayout.cshtml";
    ViewBag.Title = "User Registration";
}

<style>
    .register-card {
        background-color: #f8f9fa;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0,0,0,0.05);
    }

    .form-label {
        font-weight: 500;
        color: #343a40;
    }

    .form-control, .form-select {
        border-radius: 6px;
        border: 1px solid #ced4da;
        background-color: #ffffff;
        transition: border-color 0.3s ease;
    }

        .form-control:focus, .form-select:focus {
            border-color: #0d6efd;
            box-shadow: 0 0 0 0.2rem rgba(13,110,253,0.25);
        }

    .btn-primary {
        padding: 10px;
        font-weight: 500;
        border-radius: 6px;
    }

    .cursor-pointer {
        cursor: pointer;
    }
</style>

<div class="container d-flex justify-content-center align-items-center mt-5">
    <div class="register-card" style="width: 100%; max-width: 600px;">
        <h3 class="mb-4 text-primary text-center">🧾 User Registration</h3>

        @if (ViewBag.Error != null)
        {
            <div class="alert alert-danger text-center">@ViewBag.Error</div>
        }

        <form method="post" action="/User/Register">
            <div class="mb-3">
                @Html.LabelFor(m => m.FullName, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", required = "required" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(m => m.Username, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.Username, new { @class = "form-control", required = "required" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(m => m.Email, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", type = "email", required = "required" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(m => m.PhoneNumber, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", type = "tel", required = "required" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(m => m.Address, new { @class = "form-label" })
                @Html.TextAreaFor(m => m.Address, new { @class = "form-control", required = "required", rows = "2" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(m => m.DateOfBirth, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.DateOfBirth, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", required = "required" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(m => m.Gender, new { @class = "form-label" })
                @Html.DropDownListFor(m => m.Gender, new SelectList(new[] { "Male", "Female", "Other" }), "Select Gender", new { @class = "form-select", required = "required" })
            </div>

            <div class="mb-3">
                <label class="form-label">Password</label>
                <div class="input-group">
                    <input type="password" name="password" id="registerPassword" class="form-control" required />
                    <span class="input-group-text cursor-pointer" onclick="togglePassword('registerPassword','registerEye')">
                        <i class="fa-solid fa-eye-slash" id="registerEye"></i>
                    </span>
                </div>
            </div>

            <div class="text-end mt-4">
                <button type="submit" class="btn btn-primary w-100">Register</button>
            </div>
        </form>
    </div>
</div>

<script>
    function togglePassword(id, iconId) {
        const input = document.getElementById(id);
        const icon = document.getElementById(iconId);
        if (input.type === "password") {
            input.type = "text";
            icon.classList.replace("fa-eye-slash", "fa-eye");
        } else {
            input.type = "password";
            icon.classList.replace("fa-eye", "fa-eye-slash");
        }
    }
</script>
