@model LTI.Models.PolicyViewModel
@{
    Layout = null;
    int baseMonths = Model.DurationMonths;
    int maxMonths = 10;
    var today = DateTime.Today;
}

<!DOCTYPE html>
<html>
<head>
    <title>Buy @Model.PolicyName</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        .tick {
            font-size: 60px;
            color: green;
        }

        .hidden {
            display: none;
        }
    </style>
    <script>
        function toggleExtension() {
            const extend = document.getElementById("extendEMI").checked;
            document.getElementById("emiExtension").style.display = extend ? "block" : "none";
            document.getElementById("taxNote").style.display = extend ? "block" : "none";
            calculateEMI();
        }

        function calculateEMI() {
            const extend = document.getElementById("extendEMI").checked;
            const monthsDropdown = document.getElementById("emiMonths");
            const selectedMonths = parseInt(monthsDropdown.value);
            const baseMonths = parseInt(monthsDropdown.getAttribute("data-base"));
            const basePremium = parseFloat(document.getElementById("basePremium").value);
            const taxRate = 0.35;
            const startDate = new Date();
            const monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];

            let monthlyBase = basePremium / baseMonths;
            let output = `<h5>EMI Plan for ${selectedMonths} months:</h5><ul>`;
            let total = 0;

            for (let i = 0; i < selectedMonths; i++) {
                let dueDate = new Date(startDate);
                dueDate.setMonth(startDate.getMonth() + i);
                let dateStr = `${dueDate.getDate()} ${monthNames[dueDate.getMonth()]} ${dueDate.getFullYear()}`;

                if (i < baseMonths) {
                    output += `<li>Month ${i + 1} (${dateStr}): ₹${monthlyBase.toFixed(2)} (Base)</li>`;
                    total += monthlyBase;
                } else {
                    let tax = monthlyBase * taxRate;
                    let taxedEMI = monthlyBase + tax;
                    output += `<li>Month ${i + 1} (${dateStr}): ₹${taxedEMI.toFixed(2)} (₹${monthlyBase.toFixed(2)} + ₹${tax.toFixed(2)} tax)</li>`;
                    total += taxedEMI;
                }
            }

            let endDate = new Date(startDate);
            endDate.setMonth(startDate.getMonth() + selectedMonths);
            let endStr = `${endDate.getDate()} ${monthNames[endDate.getMonth()]} ${endDate.getFullYear()}`;

            output += `</ul><p><strong>Total Payable:</strong> ₹${total.toFixed(2)}</p>`;
            output += `<p><strong>Start Date:</strong> ${startDate.toDateString()}</p>`;
            output += `<p><strong>End Date:</strong> ${endStr}</p>`;
            document.getElementById("emiPlan").innerHTML = output;
        }

        function showPaymentFields() {
            const method = document.getElementById("paymentMethod").value;
            document.getElementById("creditFields").classList.add("hidden");
            document.getElementById("debitFields").classList.add("hidden");
            document.getElementById("upiFields").classList.add("hidden");

            if (method === "Credit Card") document.getElementById("creditFields").classList.remove("hidden");
            if (method === "Debit Card") document.getElementById("debitFields").classList.remove("hidden");
            if (method === "UPI") document.getElementById("upiFields").classList.remove("hidden");
        }

        function confirmPayment() {
            document.getElementById("purchaseForm").classList.add("hidden");
            document.getElementById("successMessage").classList.remove("hidden");
        }

        window.onload = function () {
            toggleExtension();
            showPaymentFields();
        };
    </script>
</head>
<body class="container mt-4">
    <h2>Buy: @Model.PolicyName</h2>

    <div id="purchaseForm">
        <form onsubmit="event.preventDefault(); confirmPayment();">
            <input type="hidden" id="basePremium" value="@Model.BasePremium" />

            <label>Nominee Name:</label>
            <input type="text" name="nomineeName" class="form-control mb-3" required />

            <label>Do you want EMI extension?</label>
            <input type="checkbox" id="extendEMI" onchange="toggleExtension()" />
            <div id="taxNote" class="text-warning mt-2" style="display:none;">
                EMI extension adds 35% tax on the extra months beyond the original duration.
            </div>

            <div id="emiExtension" class="mt-3">
                <label>Select EMI Duration:</label>
                <select id="emiMonths" data-base="@baseMonths" class="form-select w-25 mb-3" onchange="calculateEMI()">
                    @for (int i = baseMonths; i <= maxMonths; i++)
                    {
                        <option value="@i">@i months</option>
                    }
                </select>
            </div>

            <div id="emiPlan" class="mb-4"></div>

            <label>Select Payment Method:</label>
            <select id="paymentMethod" class="form-select w-50 mb-3" onchange="showPaymentFields()">
                <option>Credit Card</option>
                <option>Debit Card</option>
                <option>UPI</option>
            </select>

            <div id="creditFields" class="hidden">
                <input type="text" class="form-control mb-2" placeholder="Card Number" required />
                <input type="text" class="form-control mb-2" placeholder="Cardholder Name" required />
                <input type="text" class="form-control mb-2" placeholder="Expiry (MM/YY)" required />
                <input type="text" class="form-control mb-2" placeholder="CVV" required />
            </div>

            <div id="debitFields" class="hidden">
                <input type="text" class="form-control mb-2" placeholder="Card Number" required />
                <input type="text" class="form-control mb-2" placeholder="Cardholder Name" required />
                <input type="text" class="form-control mb-2" placeholder="Expiry (MM/YY)" required />
                <input type="text" class="form-control mb-2" placeholder="CVV" required />
            </div>

            <div id="upiFields" class="hidden">
                <label>Enter UPI ID:</label>
                <div class="input-group mb-2">
                    <input type="text" class="form-control" placeholder="yourname" required />
                    <select class="form-select w-25">
                        <option>@@ybl</option>
                        <option>@@okaxis</option>
                    </select>
                </div>
            </div>

            <button type="submit" class="btn btn-success mt-3">Pay Now</button>
        </form>
    </div>

    <div id="successMessage" class="hidden text-center mt-5">
        <div class="tick">✅</div>
        <h4>Successfully Paid!</h4>
        <p>You are now registered for this policy.</p>
        <p>Don't forget to pay all your EMIs on time.</p>
        <a href="/User/Dashboard" class="btn btn-outline-primary mt-3">Go to Dashboard</a>
    </div>
</body>
</html>
