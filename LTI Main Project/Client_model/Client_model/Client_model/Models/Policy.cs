//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client_model.Models
{
    using System;
    using System.Collections.Generic;
    
    public partial class Policy
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Policy()
        {
            this.PolicyApprovals = new HashSet<PolicyApproval>();
            this.UserPolicies = new HashSet<UserPolicy>();
        }
    
        public int PolicyID { get; set; }
        public int ClientID { get; set; }
        public int PolicyTypeID { get; set; }
        public string PolicyName { get; set; }
        public string PlanKind { get; set; }
        public string Description { get; set; }
        public string CoverageDetails { get; set; }
        public int DurationMonths { get; set; }
        public decimal BasePremium { get; set; }
        public string Status { get; set; }
        public string AdminNotes { get; set; }
        public System.DateTime CreatedAt { get; set; }
        public bool IsActive { get; set; }
    
        public virtual Client Client { get; set; }
        public virtual PolicyType PolicyType { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PolicyApproval> PolicyApprovals { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<UserPolicy> UserPolicies { get; set; }
        public DateTime UpdatedAt { get; internal set; }
        public virtual ICollection<Document> Documents { get; set; } = new List<Document>();

    }
}
